{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///./src/locales/en.js","webpack:///./src/components/HeaderBar.vue?7138","webpack:///./src/config sync ^\\.\\/.*$","webpack:///./src/App.vue?7e98","webpack:///./src/components/HeaderBar.vue?76e3","webpack:///./src/utils/collapse.js","webpack:///./src/utils/local-storage.js","webpack:///src/components/HeaderBar.vue","webpack:///./src/components/HeaderBar.vue?bc28","webpack:///./src/components/HeaderBar.vue","webpack:///./src/components/FooterBar.vue?07e5","webpack:///src/components/FooterBar.vue","webpack:///./src/components/FooterBar.vue?fb55","webpack:///./src/components/FooterBar.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/router/index.js","webpack:///./src/store/web3.js","webpack:///./src/utils/connector.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/locales/zh.js","webpack:///./src/contracts/Constants.js","webpack:///./src/contracts/Erc20.js","webpack:///./src/contracts/GraphClient.js","webpack:///./src/contracts/Entrance.js","webpack:///./src/contracts/MainContract.js","webpack:///./src/contracts/JudgerOrg.js","webpack:///./src/contracts/GovernorAlpha.js","webpack:///./src/config/development.js","webpack:///./src/config/production.js","webpack:///./src/config/index.js","webpack:///./src/utils/utils.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","unlock","deposit","withdraw","home","me","govern","team","applyInputAddr","noticeTeam","swap","days","hours","minutes","seconds","viewPools","info","noticeWallet","noticeAddr","noticePrompt","noticeConfirm","noticeDeposit","noticeApprove","noticeCancel","noticeWithdraw","noticeNowWithdraw","noticeSwtich","map","webpackContext","req","id","webpackContextResolve","keys","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","staticStyle","scopedSlots","_u","fn","proxy","account","_v","_s","shortAddr","on","$event","showConnectWalletDialog","$t","model","callback","$$v","active","expression","$route","path","showGovernPage","connectWalltetDialogShow","nativeOn","loginMetaMask","switchNetworkDialogShow","switchNetwork","elTransition","Transition","el","style","transition","dataset","oldPaddingTop","paddingTop","oldPaddingBottom","paddingBottom","height","enter","oldOverflow","overflow","scrollHeight","leave","functional","render","h","children","getLocalStorage","storage","args","forEach","arg","localStorage","getItem","setLocalStorage","prop","setItem","component","icons","components","methods","handleClick","HeaderBar","FooterBar","created","init","unregister","Vue","use","VueRouter","auth","routes","router","base","process","Connector","coinType","toUpperCase","provider","enable","currentProvider","web3","state","balance","pcfxBalance","chainId","ticketContract","pcfxContract","prizePoolContract","periodicPrizeStrategyContract","poolGoContract","tokenFaucetContract","cfxStakeContract","cfxUniswapV2PairContract","fomoTicketContract","fomoFinalTicketContract","fomoPrizePoolContract","fomoPeriodicPrizeStrategyContract","fomoCfxStakeContract","fomoTokenFaucetContract","stakePoolContract","poolGoCUsdtLPContract","poolGoFarmContract","poolGoFarms","wantTokenContracts","stratContracts","pcfxPrice","poolgoPrice","confluxReader","isPortalInstalled","prizePools","tokens","entranceContract","mutations","UPDATE_CHAIN_ID","HANDLE_ACCOUNTS_CHANGED","UPDATE_BALANCE","UPDATE_PCFX_BALANCE","INIT_TICKET_CONTRACT","INIT_PCFX_CONTRACT","INIT_PRIZE_POOL_CONTRACT","INIT_PERIOD_PRIZE_STRATEGY_CONTRACT","INIT_POOLGO_CONTRACT","INIT_TOKEN_FAUCET_CONTRACT","INIT_CFX_STAKE_CONTRACT","INIT_TOKEN_FAUCET_PROXY_FACTORY_CONTRACT","tokenFaucetProxyFactoryContract","INIT_FOMO_TICKET_CONTRACT","INIT_FOMO_PRIZE_POOL_CONTRACT","INIT_FOMO_PERIOD_PRIZE_STRATEGY_CONTRACT","INIT_FOMO_TOKEN_FAUCET_CONTRACT","INIT_FOMO_CFX_STAKE_CONTRACT","INIT_STAKE_POOL_CONTRACT","INIT_POOL_GO_CUSDT_LP_CONTRACT","INIT_CFX_UNISWAPV2_PAIR_CONTRACT","INIT_POOL_GO_FARM_CONTRACT","INIT_PRIZE_POOLS","INIT_POOL_GO_FARMS","INIT_PCFX_PRICE","INIT_POOLGO_PRICE","INIT_CONFLUX_READER","UPDATE_IS_PORTAL_INSTALLED","INIT_TOKENS","INIT_ENTRANCE_CONTRACT","actions","commit","dispatch","config","contract","Erc20","address","Entrance","entranceAddress","ethLogin","cfxLogin","logout","login","connectorType","connector","isLoggedIn","connect","Web3","providers","HttpProvider","web3Provider","conflux","confluxJS","loadProvider","removeAllListeners","parseInt","accounts","method","eth","getBalance","selectedAddress","log","BigNumber","div","balanceOf","Vuex","Store","VueI18n","i18n","locale","messages","require","Vuesax","productionTip","store","App","$mount","MAX_UINT256","BN","pow","sub","set","ROUNDING_MODE","abi","bytecode","givenProvider","web3Reader","Contract","contractReader","decimals","defaultGasPrice","totalSupply","user","getPrecision","precision","cal","symbol","owner","spender","allowance","allowedBalance","sender","amount","that","gasPrice","weiAmount","times","weiAmountBN","toBN","tx","approve","gasLimit","estimateGas","from","to","send","gas","Math","round","utils","contractResult","timer","setInterval","getTransactionReceipt","receipt","clearInterval","str","toString","start","indexOf","over","jsonstr","substr","jsonObject","JSON","parse","e2","APIURL","theGraphUrl","graphClient","ApolloClient","uri","cache","InMemoryCache","addr","status","first","skip","tokensQuery","GraphClient","query","gql","variables","signStatus","judgerOrgAddr","mainContractOrder","persons","balances","weiAmounts","launchJudgerProposal","launchProposal","contentOrIpfsHash","stakeBalance","addContract","kindle","erc20Address","createMainContract","contractOrder","signContract","proposalOrder","signProposal","signJudgerProposal","applyJudge","applyExit","exitStakeBalance","createKindle","MainContract","judgerMapNum","isJudgerProposal","getProposalAssignBalance","order","getProposalAssignAddr","getProposalSignInfo","judgerProposalMap","conPersonProposalMap","getContractSignInfo","JudgerOrg","contactMap","caseNum","isIdle","delegates","idleJudgerSupply","url","contact","remark","maxCaseNum","assignJudgerNum","rateMantissa","idleStatus","setIdleStatus","setContactMap","delegatee","delegate","GovernorAlpha","getBlockNumber","blockNum","curBlockNum","targets","values","signatures","calldatas","description","propose","proposalId","support","castVote","execute","queue","cancel","networkId","explorerUrl","env","formatDate","succ","msg","formatSeconds","theTime","theTime1","theTime2"],"mappings":"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","file":"js/app.032d39a8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"apply~me~team\":\"apply~me~team\",\"apply\":\"apply\",\"me\":\"me\",\"team\":\"team\",\"home\":\"home\"}[chunkId]||chunkId) + \".\" + {\"apply~me~team\":\"713ef253\",\"apply\":\"6cd608f2\",\"me\":\"eb19b4ec\",\"team\":\"7255db2b\",\"home\":\"9760741b\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"apply~me~team\":1,\"apply\":1,\"me\":1,\"team\":1,\"home\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"apply~me~team\":\"apply~me~team\",\"apply\":\"apply\",\"me\":\"me\",\"team\":\"team\",\"home\":\"home\"}[chunkId]||chunkId) + \".\" + {\"apply~me~team\":\"6a598d09\",\"apply\":\"ad82b293\",\"me\":\"ad82b293\",\"team\":\"b618945b\",\"home\":\"1b20f1ef\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","// import en from 'vuetify/es5/locale/en'\r\nmodule.exports = {\r\n    // ...en,\r\n\r\n    unlock: \"Unlock Wallet\",\r\n    deposit: \"deposit\",\r\n    withdraw: \"withdraw\",\r\n    home: \"Home\",\r\n    apply: \"Apply\",\r\n    me: \"Me\",\r\n    govern:\"Govern\",\r\n    team:\"Team\",\r\n    applyInputAddr:\"Please input address of contract persons:\",\r\n    noticeTeam:\"Choosing a team of professional and fair judges can guarantee the fulfillment of your contract.\",\r\n\r\n    swap: \"Swap\",\r\n    days: \"days\",\r\n    hours: \"hours\",\r\n    minutes: \"minutes\",\r\n    seconds: \"seconds\",\r\n    viewPools: \"ViewPool\",\r\n    info: \"Info\",\r\n    error: \"Error\",\r\n    noticeWallet: \"Please install wallet\",\r\n    noticeAddr: \"Haven't obtained account address\",\r\n    noticePrompt: \"Prompt\",\r\n    noticeConfirm: \"Confirm\",\r\n    noticeDeposit: \"Deposit\",\r\n    noticeApprove: \"Approve\",\r\n    noticeCancel: \"Cancel\",\r\n    noticeWithdraw: \"Withdraw\",\r\n    noticeNowWithdraw: \"Withdraw Now\",\r\n    \r\n \r\n    noticeSwtich: \"Switch Network\",\r\n}\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeaderBar.vue?vue&type=style&index=0&lang=css&\"","var map = {\n\t\"./\": \"f121\",\n\t\"./development\": \"e5bf\",\n\t\"./development.js\": \"e5bf\",\n\t\"./index\": \"f121\",\n\t\"./index.js\": \"f121\",\n\t\"./production\": \"eef8\",\n\t\"./production.js\": \"eef8\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"354b\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header-bar'),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hidden\"},[_c('vs-navbar',{staticStyle:{\"z-index\":\"2000\",\"position\":\"relative\",\"background-color\":\"#024DB2\"},attrs:{\"square\":\"\",\"centerCollapsed\":\"\",\"text-white\":\"\"},scopedSlots:_vm._u([{key:\"left\",fn:function(){return [_c('img',{staticClass:\"logo-size\",attrs:{\"src\":\"cybercourt.png\"}})]},proxy:true},{key:\"right\",fn:function(){return [(!!_vm.account)?_c('vs-button',{staticStyle:{\"background-color\":\"rgba(0,0,0,0)\",\"border\":\"1px solid #ffffff\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"textWhite\":\"\",\"icon\":\"\"}},[_vm._v(_vm._s(_vm.shortAddr(_vm.account))),_c('i',{staticClass:\"bx bxs-user\"})]):_c('vs-button',{staticStyle:{\"background-color\":\"rgba(0,0,0,0)\",\"border\":\"1px solid #ffffff\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"icon\":\"\",\"textWhite\":\"\"},on:{\"click\":function($event){return _vm.showConnectWalletDialog()}}},[_vm._v(_vm._s(_vm.$t('unlock'))),_c('i',{staticClass:\"bx bx-lock-open\"})])]},proxy:true}])}),_c('vs-navbar',{staticStyle:{\"text-align\":\"center\",\"background\":\"#000000\",\"position\":\"relative\",\"color\":\"#ffffff\"},attrs:{\"shadow\":\"\",\"square\":\"\",\"left-collapsed\":\"\",\"right-collapsed\":\"\"},scopedSlots:_vm._u([{key:\"left\",fn:function(){return undefined},proxy:true},{key:\"right\",fn:function(){return undefined},proxy:true}]),model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('vs-navbar-item',{staticStyle:{\"width\":\"70px\",\"text-align\":\"center\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"active\":_vm.$route.path == '/',\"id\":\"docs\",\"to\":\"/\"}},[_vm._v(\" \"+_vm._s(_vm.$t('home'))+\" \")]),_c('vs-navbar-item',{staticStyle:{\"width\":\"70px\",\"text-align\":\"center\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"active\":_vm.$route.path == '/apply',\"id\":\"apply\",\"to\":\"/apply\"}},[_vm._v(\" \"+_vm._s(_vm.$t('apply'))+\" \")]),_c('vs-navbar-item',{staticStyle:{\"width\":\"70px\",\"text-align\":\"center\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"active\":_vm.$route.path == '/govern',\"id\":\"govern\"},on:{\"click\":_vm.showGovernPage}},[_vm._v(\" \"+_vm._s(_vm.$t('govern'))+\" \")]),_c('vs-navbar-item',{staticStyle:{\"width\":\"70px\",\"text-align\":\"center\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"active\":_vm.$route.path == '/team',\"id\":\"team\",\"to\":\"/team\"}},[_vm._v(\" Judge \")]),_c('vs-navbar-item',{staticStyle:{\"width\":\"70px\",\"text-align\":\"center\",\"font-family\":\"'Tourney', cursive\"},attrs:{\"active\":_vm.$route.path == '/me',\"id\":\"license\",\"to\":\"/me\"}},[_vm._v(\" \"+_vm._s(_vm.$t('me'))+\" \")])],1),_c('vs-dialog',{attrs:{\"width\":\"500px\",\"not-center\":\"\",\"prevent-close\":\"\"},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h4',{staticClass:\"not-margin\"},[_vm._v(\" Connenct to a Wallet \")]),_c('el-row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('el-col',{attrs:{\"span\":23}},[_c('div',{staticStyle:{\"background-color\":\"#F5F5F5\",\"line-height\":\"25px\",\"font-size\":\"14px\",\"border-radius\":\"10px\",\"padding-top\":\"10px\",\"padding-bottom\":\"10px\"}},[_vm._v(\" By connecting a wallet, you agree to acknowledge that you have read and understand the CyberCourt protocol disclaimer. \")])])],1)]},proxy:true},{key:\"footer\",fn:function(){return undefined},proxy:true}]),model:{value:(_vm.connectWalltetDialogShow),callback:function ($$v) {_vm.connectWalltetDialogShow=$$v},expression:\"connectWalltetDialogShow\"}},[_c('div',{staticClass:\"con-content\"},[_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('el-col',{attrs:{\"span\":23}},[_c('el-row',{staticStyle:{\"background-color\":\"#F5F5F5\",\"height\":\"60px\",\"border-radius\":\"10px\",\"border\":\"1px solid #CED0D9\",\"cursor\":\"pointer\"},attrs:{\"type\":\"flex\",\"justify\":\"space-between\"},nativeOn:{\"click\":function($event){return _vm.loginMetaMask($event)}}},[_c('el-col',{staticStyle:{\"text-align\":\"left\",\"padding-left\":\"10px\",\"line-height\":\"60px\"},attrs:{\"span\":16}},[_vm._v(\" MetaMask \")]),_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-top\":\"13px\",\"padding-right\":\"10px\"},attrs:{\"span\":8}},[_c('img',{attrs:{\"src\":\"metamask.png\",\"width\":\"30px\"}})])],1)],1)],1)],1)]),_c('vs-dialog',{attrs:{\"width\":\"300px\",\"not-center\":\"\",\"prevent-close\":\"\"},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h4',{staticClass:\"not-margin\"},[_vm._v(\" Please Switch To \"),_c('b',[_vm._v(\"Network Mumbai\")])])]},proxy:true},{key:\"footer\",fn:function(){return [_c('div',{staticClass:\"con-footer\"},[_c('vs-button',{attrs:{\"dark\":\"\",\"shadow\":\"\"},on:{\"click\":function($event){_vm.switchNetworkDialogShow=false}}},[_vm._v(\" \"+_vm._s(_vm.$t('noticeConfirm'))+\" \")]),_c('vs-button',{attrs:{\"transparent\":\"\"},on:{\"click\":_vm.switchNetwork}},[_vm._v(\" \"+_vm._s(_vm.$t('noticeSwtich'))+\" \")])],1)]},proxy:true}]),model:{value:(_vm.switchNetworkDialogShow),callback:function ($$v) {_vm.switchNetworkDialogShow=$$v},expression:\"switchNetworkDialogShow\"}},[_c('div',{staticClass:\"con-content\"},[_c('p',[_vm._v(\" Please switch the network to the network Mumbai on MetaMask \")])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const elTransition =\r\n  \"0.3s height ease-in-out, 0.3s padding-top ease-in-out, 0.3s padding-bottom ease-in-out\";\r\nconst Transition = {\r\n  \"before-enter\"(el) {\r\n    el.style.transition = elTransition;\r\n    if (!el.dataset) el.dataset = {};\r\n\r\n    el.dataset.oldPaddingTop = el.style.paddingTop;\r\n    el.dataset.oldPaddingBottom = el.style.paddingBottom;\r\n\r\n    el.style.height = 0;\r\n    el.style.paddingTop = 0;\r\n    el.style.paddingBottom = 0;\r\n  },\r\n\r\n  enter(el) {\r\n    el.dataset.oldOverflow = el.style.overflow;\r\n    if (el.scrollHeight !== 0) {\r\n      el.style.height = el.scrollHeight + \"px\";\r\n      el.style.paddingTop = el.dataset.oldPaddingTop;\r\n      el.style.paddingBottom = el.dataset.oldPaddingBottom;\r\n    } else {\r\n      el.style.height = \"\";\r\n      el.style.paddingTop = el.dataset.oldPaddingTop;\r\n      el.style.paddingBottom = el.dataset.oldPaddingBottom;\r\n    }\r\n\r\n    el.style.overflow = \"hidden\";\r\n  },\r\n\r\n  \"after-enter\"(el) {\r\n    el.style.transition = \"\";\r\n    el.style.height = \"\";\r\n    el.style.overflow = el.dataset.oldOverflow;\r\n  },\r\n\r\n  \"before-leave\"(el) {\r\n    if (!el.dataset) el.dataset = {};\r\n    el.dataset.oldPaddingTop = el.style.paddingTop;\r\n    el.dataset.oldPaddingBottom = el.style.paddingBottom;\r\n    el.dataset.oldOverflow = el.style.overflow;\r\n\r\n    el.style.height = el.scrollHeight + \"px\";\r\n    el.style.overflow = \"hidden\";\r\n  },\r\n\r\n  leave(el) {\r\n    if (el.scrollHeight !== 0) {\r\n      el.style.transition = elTransition;\r\n      el.style.height = 0;\r\n      el.style.paddingTop = 0;\r\n      el.style.paddingBottom = 0;\r\n    }\r\n  },\r\n\r\n  \"after-leave\"(el) {\r\n    el.style.transition = \"\";\r\n    el.style.height = \"\";\r\n    el.style.overflow = el.dataset.oldOverflow;\r\n    el.style.paddingTop = el.dataset.oldPaddingTop;\r\n    el.style.paddingBottom = el.dataset.oldPaddingBottom;\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: \"collapseTransition\",\r\n  functional: true,\r\n  render(h, { children }) {\r\n    const data = {\r\n      on: Transition\r\n    };\r\n    return h(\"transition\", data, children);\r\n  }\r\n};","export const getLocalStorage = (...args) => {\r\n  const storage = {};\r\n  args.forEach(arg => {\r\n    storage[arg] = window.localStorage.getItem(arg) || null;\r\n  });\r\n  return storage;\r\n};\r\n\r\nexport const setLocalStorage = data => {\r\n  Object.keys(data).forEach(prop => {\r\n    const el = data[prop];\r\n    window.localStorage.setItem(prop, el);\r\n  });\r\n};\r\n\r\nexport const removeLocalStorage = (...args) => {\r\n  args.forEach(arg => {\r\n    window.localStorage.removeItem(arg);\r\n  });\r\n};\r\n"," <template>\r\n\r\n   <div class=\"hidden\" >\r\n\r\n\r\n      <vs-navbar square  centerCollapsed text-white style=\"z-index:2000;position: relative;background-color:#024DB2;\">\r\n       <template #left>\r\n            <img src=\"cybercourt.png\" class=\"logo-size\">\r\n       </template>\r\n       <template #right>\r\n         <vs-button v-if=\"!!account\" textWhite icon style=\"background-color: rgba(0,0,0,0);border:1px solid #ffffff;font-family: 'Tourney', cursive;\">{{ shortAddr(account) }}<i class='bx bxs-user'></i> </vs-button>\r\n         <vs-button v-else icon style=\"background-color: rgba(0,0,0,0);border:1px solid #ffffff;font-family: 'Tourney', cursive;\" textWhite  @click=\"showConnectWalletDialog()\">{{$t('unlock')}}<i class='bx bx-lock-open'></i></vs-button>\r\n\r\n       </template>\r\n     </vs-navbar>\r\n     <vs-navbar shadow square left-collapsed right-collapsed v-model=\"active\" style=\"text-align:center;background: #000000;position: relative;color:#ffffff;\">\r\n       <template #left>\r\n       </template>\r\n       \r\n       <vs-navbar-item :active=\"$route.path == '/'\" id=\"docs\" to=\"/\" style=\"width:70px;text-align:center;font-family: 'Tourney', cursive;\">\r\n           {{$t('home')}}\r\n         </vs-navbar-item>\r\n         <vs-navbar-item :active=\"$route.path == '/apply'\" id=\"apply\" to=\"/apply\" style=\"width:70px;text-align:center;font-family: 'Tourney', cursive;\">\r\n           {{$t('apply')}}\r\n         </vs-navbar-item>\r\n         <vs-navbar-item :active=\"$route.path == '/govern'\" id=\"govern\" @click=\"showGovernPage\" style=\"width:70px;text-align:center;font-family: 'Tourney', cursive;\">\r\n           {{$t('govern')}}\r\n         </vs-navbar-item>\r\n         <vs-navbar-item :active=\"$route.path == '/team'\" id=\"team\" to=\"/team\" style=\"width:70px;text-align:center;font-family: 'Tourney', cursive;\">\r\n           Judge\r\n         </vs-navbar-item>\r\n         <vs-navbar-item :active=\"$route.path == '/me'\" id=\"license\" to=\"/me\" style=\"width:70px;text-align:center;font-family: 'Tourney', cursive;\">\r\n           {{$t('me')}}\r\n         </vs-navbar-item>\r\n       <template #right>\r\n\r\n         \r\n\r\n       </template>\r\n     </vs-navbar>\r\n\r\n     \r\n     \r\n     <vs-dialog width=\"500px\" not-center prevent-close v-model=\"connectWalltetDialogShow\">\r\n       <template #header>\r\n         <h4 class=\"not-margin\">\r\n           Connenct to a Wallet\r\n         </h4>\r\n         <el-row type=\"flex\" justify=\"center\" style=\"margin-top:20px;\">\r\n           <el-col :span=\"23\">\r\n            <div style=\"background-color:#F5F5F5;line-height:25px;font-size:14px;border-radius:10px;padding-top:10px;padding-bottom:10px;\">\r\n              By connecting a wallet, you agree to acknowledge that you have read and understand the CyberCourt protocol disclaimer.\r\n            </div>\r\n           </el-col>\r\n         </el-row>\r\n       </template>\r\n\r\n       <div class=\"con-content\">\r\n         <el-row type=\"flex\" justify=\"center\">\r\n           <el-col :span=\"23\">\r\n             <el-row  type=\"flex\" justify=\"space-between\" @click.native=\"loginMetaMask\" style=\"background-color:#F5F5F5;height:60px;border-radius:10px;border:1px solid #CED0D9;cursor:pointer;\">\r\n               <el-col :span=\"16\" style=\"text-align:left;padding-left:10px;line-height:60px;\">\r\n                 MetaMask\r\n               </el-col>\r\n               <el-col :span=\"8\" style=\"text-align:right;padding-top:13px;padding-right:10px;\">\r\n                 <img src=\"metamask.png\" width=\"30px\">\r\n               </el-col>\r\n             </el-row>\r\n           </el-col>\r\n         </el-row>\r\n         <!-- <el-row type=\"flex\" justify=\"center\" style=\"margin-top:20px;\">\r\n           <el-col :span=\"23\">\r\n             <el-row  type=\"flex\" justify=\"space-between\"  style=\"background-color:#F5F5F5;height:60px;border-radius:10px;border:1px solid #CED0D9;cursor:pointer;\">\r\n               <el-col :span=\"16\" style=\"text-align:left;padding-left:10px;line-height:60px;\">\r\n                 WalletConnect\r\n               </el-col>\r\n               <el-col :span=\"8\" style=\"text-align:right;padding-top:18px;padding-right:10px;\">\r\n                 <img src=\"walletConnectIcon.svg\" width=\"30px\">\r\n               </el-col>\r\n             </el-row>\r\n           </el-col>\r\n         </el-row>\r\n         <el-row type=\"flex\" justify=\"center\" style=\"margin-top:20px;\">\r\n           <el-col :span=\"23\">\r\n             <el-row  type=\"flex\" justify=\"space-between\"  style=\"background-color:#F5F5F5;height:60px;border-radius:10px;border:1px solid #CED0D9;cursor:pointer;\">\r\n               <el-col :span=\"16\" style=\"text-align:left;padding-left:10px;line-height:60px;\">\r\n                 Coinbase Wallet\r\n               </el-col>\r\n               <el-col :span=\"8\" style=\"text-align:right;padding-top:13px;padding-right:10px;\">\r\n                 <img src=\"coinbaseWalletIcon.svg\" width=\"30px\">\r\n               </el-col>\r\n             </el-row>\r\n           </el-col>\r\n         </el-row> -->\r\n       </div>\r\n\r\n       <template #footer>\r\n       </template>\r\n     </vs-dialog>\r\n     <vs-dialog width=\"300px\" not-center prevent-close v-model=\"switchNetworkDialogShow\">\r\n       <template #header>\r\n         <h4 class=\"not-margin\">\r\n           Please Switch To <b>Network Mumbai</b>\r\n         </h4>\r\n       </template>\r\n\r\n       <div class=\"con-content\">\r\n         <p>\r\n           Please switch the network to the network Mumbai on MetaMask\r\n         </p>\r\n       </div>\r\n\r\n       <template #footer>\r\n         <div class=\"con-footer\">\r\n           <vs-button @click=\"switchNetworkDialogShow=false\" dark shadow>\r\n             {{$t('noticeConfirm')}}\r\n           </vs-button>\r\n           <vs-button @click=\"switchNetwork\" transparent>\r\n             {{$t('noticeSwtich')}}\r\n           </vs-button>\r\n         </div>\r\n       </template>\r\n     </vs-dialog>\r\n   </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n  import { mapActions } from 'vuex'\r\n  import collapse from '@/utils/collapse.js'\r\n  import utils from '@/utils/utils.js'\r\n  import {getLocalStorage,setLocalStorage} from '@/utils/local-storage.js'\r\n  import config from \"@/config\";\r\n  export default {\r\n    name: 'home-view',\r\n    components: {\r\n      collapse\r\n    },\r\n    data() {\r\n      return {\r\n        connectWalltetDialogShow:false,\r\n        isActive: false,\r\n        active: 'home',\r\n        activeSidebar: false,\r\n        token:'',\r\n        switchNetworkDialogShow:false,\r\n        curCommand:'Polygon',\r\n      }\r\n    },\r\n    computed: {\r\n\r\n      balance(){\r\n          return this.$store.state.web3.balance.toFixed(1) + \"MATIC\"\r\n      },\r\n      account() {\r\n        return this.$store.state.web3.account\r\n      }\r\n    },\r\n    watch: {\r\n      '$store.state.web3.chainId': function () {\r\n        let that = this;\r\n        if ( that.$store.state.web3.chainId != parseInt(config.networkId)){\r\n          that.switchNetworkDialogShow = true;\r\n        }else{\r\n          that.switchNetworkDialogShow = false;\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      let tokenData = getLocalStorage('token');\r\n      if (tokenData!=null && tokenData.token!=null){\r\n        this.token = tokenData.token\r\n      }\r\n      // this.init()\r\n    },\r\n    methods: {\r\n      ...mapActions(['ethLogin','logout']),\r\n      showConnectWalletDialog(){\r\n        let that = this;\r\n        that.connectWalltetDialogShow = true;\r\n      },\r\n      loginMetaMask() {\r\n        let that = this;\r\n\r\n        if (that.$store.state.web3.account == null) {\r\n          that.ethLogin();\r\n        }\r\n        if (that.$store.state.web3.isPortalInstalled == false) {\r\n          that.$vs.notification({\r\n            // width:'100%',\r\n            duration: 10000,\r\n            icon: \"<i class='bx bx-error' ></i>\",\r\n            progress: 'auto',\r\n            color: 'danger',\r\n            position: 'top-center',\r\n            title: that.$t('error'),\r\n            text: that.$t('noticeWallet'),\r\n          })\r\n          return;\r\n        }\r\n        \r\n        that.connectWalltetDialogShow = false;\r\n      },\r\n      showGovernPage(){\r\n          let that = this;\r\n          that.$vs.notification({\r\n            // width:'100%',\r\n            duration: 10000,\r\n            icon: \"<i class='bx bx-error' ></i>\",\r\n            progress: 'auto',\r\n            color: 'warning',\r\n            position: 'top-center',\r\n            title: \"Info\",\r\n            text: \"Coming soon\",\r\n          })\r\n      },\r\n      exit(){\r\n        this.logout();\r\n      },\r\n      shortAddr(account) {\r\n        return utils.shortAddr(account)\r\n      },\r\n      switchNetwork(){\r\n        \r\n        ethereum\r\n          .request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              \"chainId\": \"0x\"+config.networkId.toString(16),\r\n              \"chainName\": \"Mumbai\",\r\n              \"rpcUrls\": [config.web3Provider],\r\n              \"nativeCurrency\": {\r\n                \"name\": \"MATIC\",\r\n                \"symbol\": \"MATIC\",\r\n                \"decimals\": 18\r\n              },\r\n              \"blockExplorerUrls\": [\"https://polygon-explorer-mumbai.chainstacklabs.com/\"]\r\n            }], // you must have access to the specified account\r\n          })\r\n          .then((result) => {\r\n          })\r\n          .catch((error) => {\r\n            if (error.code === 4001) {\r\n              // EIP-1193 userRejectedRequest error\r\n              console.log(\"We can't encrypt anything without the key.\");\r\n            } else {\r\n              console.error(error);\r\n            }\r\n          });\r\n        \r\n      },\r\n      switchBalance(command){\r\n        this.token = command;\r\n        setLocalStorage({token:command})\r\n        // this.$vuetify.lang.current  = command\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .collapse-menu {\r\n    position: absolute;\r\n    top: 80px;\r\n    width: 100%;\r\n    text-align: left;\r\n  }\r\n  .collapse-menu div {\r\n    padding: 5px 10px;\r\n    color: #76807F;\r\n  }\r\n  .heading {\r\n    text-align: center;\r\n    margin-bottom: 0px;\r\n    background: #14151A;\r\n  }\r\n  .header-bar {\r\n  \tdisplay: flex;\r\n  \tjustify-content: space-between;\r\n  \tfont-size: 1rem;\r\n  \theight: 70px;\r\n  \tpadding-top: 20px;\r\n  \tpadding-left: 20px;\r\n  \tpadding-right: 20px;\r\n  }\r\n  .header-bar .el-button {\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    background-color: rgb(33, 33, 33);\r\n    border: 0px;\r\n    border-radius: 12px;\r\n    color: rgb(144, 144, 255);\r\n    cursor: pointer;\r\n    display: flex;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    height: 36px;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    outline: none;\r\n    padding-left: 16px;\r\n    padding-right: 16px;\r\n    width: 120px;\r\n\r\n  }\r\n  .header-bar .logo {\r\n  \theight: 45px;\r\n  }\r\n  .header-bar .menu {\r\n  \theight: 45px;\r\n    color: #eee;\r\n    text-align: center;\r\n    padding-top: 10px;\r\n  }\r\n  .header-bar .menu span {\r\n    padding: 0 20px;\r\n    font-weight: bold;\r\n  }\r\n  .header-bar .menu ul {\r\n    padding: 0px;\r\n  }\r\n  .header-bar .menu ul li {\r\n  \tdisplay: inline-block;\r\n  \tfont-size: 1rem;\r\n  \theight: 45px;\r\n  \tpadding: 15px;\r\n  \tfont-weight: bold;\r\n  }\r\n  .logo-size{\r\n    width:200px;\r\n  }\r\n  @media screen  and (max-width:600px) {\r\n    .logo-size{\r\n      width:78px;\r\n    }\r\n  }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeaderBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeaderBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeaderBar.vue?vue&type=template&id=f6901a30&\"\nimport script from \"./HeaderBar.vue?vue&type=script&lang=js&\"\nexport * from \"./HeaderBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HeaderBar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin-top\":\"100px\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"," <template>\r\n <div style=\"margin-top:100px\">\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"home-view\",\r\n  data() {\r\n    return {\r\n      icons: [\"mdi-facebook\", \"mdi-twitter\", \"mdi-linkedin\", \"mdi-instagram\"],\r\n    };\r\n  },\r\n  components: {\r\n    //[Button.name]: Button\r\n  },\r\n  methods: {\r\n    handleClick() {\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FooterBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FooterBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FooterBar.vue?vue&type=template&id=7faf6b10&\"\nimport script from \"./FooterBar.vue?vue&type=script&lang=js&\"\nexport * from \"./FooterBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"app\">\r\n    <header-bar></header-bar>\r\n\r\n    <router-view/>\r\n\r\n<!--    <footer-bar></footer-bar>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nimport HeaderBar from '@/components/HeaderBar.vue'\r\nimport FooterBar from '@/components/FooterBar.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    'header-bar': HeaderBar,\r\n    'footer-bar': FooterBar\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    ...mapActions(['init'])\r\n  }\r\n}\r\n</script>\r\n<style>\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n#app {\r\n  font-family: BinancePlex,Arial,PingFangSC-Regular,'Microsoft YaHei',sans-serif!important;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n#nav {\r\n  padding: 0px;\r\n}\r\n\r\n#nav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\n#nav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1ba995da&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\r\n//\r\nimport { register,unregister } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  \r\n  unregister();\r\n  // var refreshing = true\r\n  // register(`${process.env.BASE_URL}service-worker.js`, {\r\n  //   ready () {\r\n  //     console.log(\r\n  //       'App is being served from cache by a service worker.\\n' +\r\n  //       'For more details, visit https://goo.gl/AFskqB'\r\n  //     )\r\n  //   },\r\n  //   registered () {\r\n  //     console.log('Service worker has been registered.')\r\n  //   },\r\n  //   cached () {\r\n  //     console.log('Content has been cached for offline use.')\r\n  //   },\r\n  //   updatefound () {\r\n  //     console.log('New content is downloading.')\r\n  //   },\r\n  //   updated () {\r\n  //     if (!refreshing) return;\r\n  //     refreshing = false;\r\n  //     if (confirm(`New content is available!. Click OK to refresh`)) {\r\n  //       window.location.reload();\r\n  //     }\r\n  //     console.log('New content is available; please refresh.')\r\n  //   },\r\n  //   offline () {\r\n  //     console.log('No internet connection found. App is running in offline mode.')\r\n  //   },\r\n  //   error (error) {\r\n  //     console.error('Error during service worker registration:', error)\r\n  //   }\r\n  // })\r\n}\r\n","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component:  () => import(/* webpackChunkName: \"home\" */ '../views/Home.vue')\r\n  },\r\n  {\r\n    path: '/apply',\r\n    name: 'Apply',\r\n    component:  () => import(/* webpackChunkName: \"apply\" */ '../views/Apply.vue')\r\n  },\r\n  {\r\n    path: '/me',\r\n    name: 'Me',\r\n    component:() => import( /* webpackChunkName: \"me\" */ '../views/Me.vue')\r\n  },\r\n  {\r\n    path: '/team',\r\n    name: 'Team',\r\n    component:() => import( /* webpackChunkName: \"team\" */ '../views/Team.vue')\r\n  },\r\n  {\r\n    path: '/teamGovern',\r\n    name: 'TeamGovern',\r\n    component:() => import( /* webpackChunkName: \"team\" */ '../views/TeamGovern.vue')\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'hash',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport Connector from '@/utils/connector'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport {CfxStake,ControlledToken, Erc20, PCFX, PeriodicPrizeStrategy,\r\n    PrizePool, TokenFaucet,TokenFaucetProxyFactory,UniswapV2Pair,StakePool,PoolGoFarm,Strategy,Ticket,FomoTicket,Entrance} from \"@/contracts\";\r\nimport config from \"@/config\";\r\nimport Web3 from \"web3\";\r\n\r\nlet auth\r\n\r\nconst web3 = {\r\n    state: {\r\n        account: null,\r\n        balance: 0,\r\n        pcfxBalance: 0,\r\n        chainId: 0,\r\n\r\n        ticketContract: null,\r\n        pcfxContract: null,\r\n        prizePoolContract: null,\r\n        periodicPrizeStrategyContract: null,\r\n        poolGoContract: null,\r\n        tokenFaucetContract: null,\r\n        cfxStakeContract:null,\r\n        cfxUniswapV2PairContract:null,\r\n        fomoTicketContract:null,\r\n        fomoFinalTicketContract:null,\r\n        fomoPrizePoolContract:null,\r\n        fomoPeriodicPrizeStrategyContract:null,\r\n        fomoCfxStakeContract:null,\r\n        fomoTokenFaucetContract:null,\r\n        stakePoolContract:null,\r\n        poolGoCUsdtLPContract:null,\r\n        poolGoFarmContract:null,\r\n        poolGoFarms:[],\r\n        wantTokenContracts:[],\r\n        stratContracts:[],\r\n        pcfxPrice:1,\r\n        poolgoPrice:2,\r\n        confluxReader:null,\r\n        isPortalInstalled:false,\r\n        prizePools:[],\r\n\r\n        tokens:[],\r\n        entranceContract:null,\r\n    },\r\n    mutations: {\r\n        UPDATE_CHAIN_ID: (state, chainId) => {\r\n            state.chainId = chainId\r\n        },\r\n        HANDLE_ACCOUNTS_CHANGED: (state, account) => {\r\n            state.account = account\r\n        },\r\n        UPDATE_BALANCE: (state, balance) => {\r\n            state.balance = balance\r\n        },\r\n        UPDATE_PCFX_BALANCE: (state, pcfxBalance) => {\r\n            state.pcfxBalance = pcfxBalance\r\n        },\r\n        INIT_TICKET_CONTRACT:(state,ticketContract)=>{\r\n            state.ticketContract = ticketContract\r\n        },\r\n        INIT_PCFX_CONTRACT:(state,pcfxContract)=>{\r\n            state.pcfxContract = pcfxContract\r\n        },\r\n        INIT_PRIZE_POOL_CONTRACT:(state,prizePoolContract)=>{\r\n            state.prizePoolContract = prizePoolContract\r\n        },\r\n        INIT_PERIOD_PRIZE_STRATEGY_CONTRACT:(state,periodicPrizeStrategyContract)=>{\r\n            state.periodicPrizeStrategyContract = periodicPrizeStrategyContract\r\n        },\r\n        INIT_POOLGO_CONTRACT:(state,poolGoContract)=>{\r\n            state.poolGoContract = poolGoContract\r\n        },\r\n        INIT_TOKEN_FAUCET_CONTRACT:(state,tokenFaucetContract)=>{\r\n            state.tokenFaucetContract = tokenFaucetContract\r\n        },\r\n        INIT_CFX_STAKE_CONTRACT:(state,cfxStakeContract)=>{\r\n            state.cfxStakeContract = cfxStakeContract\r\n        },\r\n        INIT_TOKEN_FAUCET_PROXY_FACTORY_CONTRACT:(state,tokenFaucetProxyFactoryContract)=>{\r\n            state.tokenFaucetProxyFactoryContract = tokenFaucetProxyFactoryContract\r\n        },\r\n\r\n        INIT_FOMO_TICKET_CONTRACT:(state,fomoTicketContract)=>{\r\n            state.fomoTicketContract = fomoTicketContract\r\n        },\r\n\r\n        // INIT_FOMO_FINAL_TICKET_CONTRACT:(state,fomoFinalTicketContract)=>{\r\n        //     state.fomoFinalTicketContract = fomoFinalTicketContract\r\n        // },\r\n\r\n        INIT_FOMO_PRIZE_POOL_CONTRACT:(state,fomoPrizePoolContract)=>{\r\n            state.fomoPrizePoolContract = fomoPrizePoolContract\r\n        },\r\n        INIT_FOMO_PERIOD_PRIZE_STRATEGY_CONTRACT:(state,fomoPeriodicPrizeStrategyContract)=>{\r\n            state.fomoPeriodicPrizeStrategyContract = fomoPeriodicPrizeStrategyContract\r\n        },\r\n        INIT_FOMO_TOKEN_FAUCET_CONTRACT:(state,fomoTokenFaucetContract)=>{\r\n            state.fomoTokenFaucetContract = fomoTokenFaucetContract\r\n        },\r\n        INIT_FOMO_CFX_STAKE_CONTRACT:(state,fomoCfxStakeContract)=>{\r\n            state.fomoCfxStakeContract = fomoCfxStakeContract\r\n        },\r\n        INIT_STAKE_POOL_CONTRACT:(state,stakePoolContract)=>{\r\n            state.stakePoolContract = stakePoolContract\r\n        },\r\n        INIT_POOL_GO_CUSDT_LP_CONTRACT:(state,poolGoCUsdtLPContract)=>{\r\n            state.poolGoCUsdtLPContract = poolGoCUsdtLPContract\r\n        },\r\n        INIT_CFX_UNISWAPV2_PAIR_CONTRACT:(state,cfxUniswapV2PairContract)=>{\r\n            state.cfxUniswapV2PairContract = cfxUniswapV2PairContract\r\n        },\r\n        INIT_POOL_GO_FARM_CONTRACT:(state,poolGoFarmContract)=>{\r\n            state.poolGoFarmContract = poolGoFarmContract\r\n        },\r\n        INIT_PRIZE_POOLS:(state,prizePools)=>{\r\n            state.prizePools = prizePools\r\n        },\r\n        INIT_POOL_GO_FARMS:(state,poolGoFarms)=>{\r\n            state.poolGoFarms = poolGoFarms\r\n        },\r\n        INIT_PCFX_PRICE:(state,pcfxPrice)=>{\r\n            state.pcfxPrice = pcfxPrice\r\n        },\r\n        INIT_POOLGO_PRICE:(state,poolgoPrice)=>{\r\n            state.poolgoPrice = poolgoPrice\r\n        },\r\n        INIT_CONFLUX_READER:(state,confluxReader)=>{\r\n            state.confluxReader = confluxReader\r\n        },\r\n        UPDATE_IS_PORTAL_INSTALLED:(state,isPortalInstalled)=>{\r\n            state.isPortalInstalled = isPortalInstalled\r\n        },\r\n\r\n        \r\n        INIT_TOKENS:(state,tokens)=>{\r\n            state.tokens = tokens\r\n        },\r\n        INIT_ENTRANCE_CONTRACT:(state,entranceContract)=>{\r\n            state.entranceContract = entranceContract\r\n        },\r\n    },\r\n    actions: {\r\n        async init({commit, dispatch}) {\r\n            let tokens = config.tokens;\r\n            for (let i=0;i<tokens.length;i++){\r\n                tokens[i].contract = new Erc20(\r\n                    tokens[i].address\r\n                );\r\n            }\r\n            commit('INIT_TOKENS', tokens);\r\n            let entranceContract = new Entrance(\r\n                config.entranceAddress\r\n            );\r\n            commit('INIT_ENTRANCE_CONTRACT', entranceContract);\r\n\r\n\r\n            // let confluxReader = new Conflux({\r\n            //     url: config.web3Provider,\r\n            //     networkId: config.networkId\r\n            // });\r\n            // let pcfx = new PCFX(\r\n            //     config.pcfxAddress\r\n            // );\r\n            // let poolGo = new Erc20(\r\n            //     config.poolGoAddress\r\n            // );\r\n            // let tokenFaucetProxyFactory = new TokenFaucetProxyFactory(\r\n            //     config.tokenFaucetProxyFactoryAddress\r\n            // );\r\n            // let cfxUniswapV2Pair = new UniswapV2Pair(\r\n            //     config.cfxUniswapV2PairAddress\r\n            // );\r\n            // let poolGoUniswapV2Pair = new UniswapV2Pair(\r\n            //     config.poolGoUniswapV2PairAddress\r\n            // );\r\n            // let fomoCfxStake = new CfxStake(\r\n            //     config.fomoCfxStakeAddress\r\n            // );\r\n            // let fomoPrizePool = new PrizePool(\r\n            //     config.fomoPrizePoolAddress\r\n            // );\r\n            // let fomoPeriodicPrizeStrategy = new PeriodicPrizeStrategy(\r\n            //     config.fomoPeriodicPrizeStrategyAddress\r\n            // );\r\n            // let fomoTicket = new ControlledToken(\r\n            //     config.fomoTicketAddress\r\n            // );\r\n            // // let fomoFinalTicket = new ControlledToken(\r\n            // //     config.fomoTicketAddress\r\n            // // );\r\n            // let fomoTokenFaucet = new TokenFaucet(\r\n            //     config.fomoTokenFaucetAddress\r\n            // );\r\n            // let stakePool = new StakePool(\r\n            //     config.stakePoolAddress\r\n            // );\r\n            // let poolGoCUsdtLP = new Erc20(\r\n            //     config.poolGoCUsdtLPAddress\r\n            // );\r\n            // let poolGoFarm = new PoolGoFarm(\r\n            //     config.poolGoFarmAddress\r\n            // );\r\n            // let prizePools = config.prizePools;\r\n            // for (let i=0;i<prizePools.length;i++){\r\n\r\n            //     prizePools[i].wantTokenContract = new Erc20(\r\n            //         config.prizePools[i].wantAddress\r\n            //     );\r\n            //     if (prizePools[i].type=='common') {\r\n            //         prizePools[i].ticketContract = new Ticket(\r\n            //             config.prizePools[i].ticketAddress\r\n            //         );\r\n            //     }else{\r\n            //         prizePools[i].ticketContract = new FomoTicket(\r\n            //             config.prizePools[i].ticketAddress\r\n            //         );\r\n            //     }\r\n            //     prizePools[i].tokenFaucetContract = new TokenFaucet(\r\n            //         config.prizePools[i].tokenFaucetAddress\r\n            //     );\r\n            //     prizePools[i].cfxStakeContract = new CfxStake(\r\n            //         config.prizePools[i].cfxStakeAddress\r\n            //     );\r\n            //     prizePools[i].prizePoolContract = new PrizePool(\r\n            //         config.prizePools[i].prizePoolAddress\r\n            //     );\r\n            //     prizePools[i].periodicPrizeStrategyContract = new PeriodicPrizeStrategy(\r\n            //         config.prizePools[i].periodicPrizeStrategyAddress\r\n            //     );\r\n            //     prizePools[i].poolAwardMoney = new BigNumber(0);\r\n            //     prizePools[i].poolMoney = new BigNumber(0);\r\n            //     prizePools[i].poolAwardBalance = new BigNumber(0);\r\n            //     prizePools[i].pcfxApy = new BigNumber(0);\r\n            //     prizePools[i].prizePeriodRemainingSeconds = new BigNumber(0);\r\n            //     prizePools[i].dripRatePerSecond = new BigNumber(0);\r\n            //     prizePools[i].daliyPoolGo = new BigNumber(0);\r\n            //     prizePools[i].formatTime = '';\r\n            //     prizePools[i].daliyUserPoolGo = new BigNumber(0);\r\n            //     prizePools[i].ticketNumber = new BigNumber(0);\r\n            //     prizePools[i].totalUserMoney = new BigNumber(0);\r\n            //     prizePools[i].unclaimedCfxPoolGoNum = new BigNumber(0);\r\n            //     prizePools[i].chance = new BigNumber(0);\r\n            // }\r\n            // let poolGoFarms = config.poolGoFarms;\r\n            // for (let i =0;i<poolGoFarms.length;i++){\r\n            //     let wantTokenContract = new Erc20(poolGoFarms[i].wantAddress);\r\n            //     let stratContract = new Strategy(poolGoFarms[i].stratageAddress);\r\n            //     poolGoFarms[i].wantTokenContract = wantTokenContract;\r\n            //     poolGoFarms[i].strategyContract = stratContract;\r\n            //     poolGoFarms[i].wantLockedMine = new BigNumber(0);\r\n            //     poolGoFarms[i].wantLockedTotal = new BigNumber(0);\r\n            //     poolGoFarms[i].sharesTotal = new BigNumber(0);\r\n            //     poolGoFarms[i].wantTokenNumber = new BigNumber(0);\r\n            //     poolGoFarms[i].daliyPoolGo = new BigNumber(0);\r\n            //     poolGoFarms[i].pendingPoolGo = new BigNumber(0);\r\n            //     poolGoFarms[i].poolGoMine = new BigNumber(0);\r\n            //     poolGoFarms[i].apy = new BigNumber(0);\r\n            //     poolGoFarms[i].controllerFee = new BigNumber(0);\r\n            //     poolGoFarms[i].apyText = \"0%\"\r\n            // }\r\n            // commit('INIT_CONFLUX_READER', confluxReader);\r\n            // // commit('INIT_TICKET_CONTRACT', ticket);\r\n            // commit('INIT_PCFX_CONTRACT', pcfx);\r\n            // // commit('INIT_PRIZE_POOL_CONTRACT', prizePool);\r\n            // // commit('INIT_PERIOD_PRIZE_STRATEGY_CONTRACT', periodicPrizeStrategy);\r\n            // commit('INIT_POOLGO_CONTRACT', poolGo);\r\n            // // commit('INIT_TOKEN_FAUCET_CONTRACT', tokenFaucet);\r\n            // // commit('INIT_CFX_STAKE_CONTRACT', cfxStatke);\r\n            // commit('INIT_TOKEN_FAUCET_PROXY_FACTORY_CONTRACT', tokenFaucetProxyFactory);\r\n            // commit('INIT_CFX_UNISWAPV2_PAIR_CONTRACT', cfxUniswapV2Pair);\r\n            // commit('INIT_FOMO_TICKET_CONTRACT', fomoTicket);\r\n            // // commit('INIT_FOMO_FINAL_TICKET_CONTRACT', fomoFinalTicket);\r\n            // commit('INIT_FOMO_PRIZE_POOL_CONTRACT', fomoPrizePool);\r\n            // commit('INIT_FOMO_PERIOD_PRIZE_STRATEGY_CONTRACT', fomoPeriodicPrizeStrategy);\r\n            // commit('INIT_FOMO_TOKEN_FAUCET_CONTRACT', fomoTokenFaucet);\r\n            // commit('INIT_FOMO_CFX_STAKE_CONTRACT', fomoCfxStake);\r\n            // commit('INIT_STAKE_POOL_CONTRACT', stakePool);\r\n            // commit('INIT_POOL_GO_CUSDT_LP_CONTRACT', poolGoCUsdtLP);\r\n            // commit('INIT_POOL_GO_FARM_CONTRACT', poolGoFarm);\r\n            // commit('INIT_PRIZE_POOLS', prizePools);\r\n            // commit('INIT_POOL_GO_FARMS', poolGoFarms);\r\n            // let price = await cfxUniswapV2Pair.getPrice();\r\n            // let poolGoPrice = await poolGoUniswapV2Pair.getReversalPrice();\r\n            // // let price = await cfxUniswapV2Pair.getReversalPrice();\r\n            // // let poolGoPrice = await poolGoUniswapV2Pair.getPrice();\r\n            // commit('INIT_PCFX_PRICE', price);\r\n            // commit('INIT_POOLGO_PRICE', poolGoPrice);\r\n            \r\n        },\r\n        async ethLogin({commit, dispatch}) {\r\n            await dispatch('login', 'ETH');\r\n        },\r\n        async cfxLogin({commit, dispatch}) {\r\n            await dispatch('login', 'CFX');\r\n        },\r\n        async logout({commit, dispatch}) {\r\n\r\n            commit('UPDATE_BALANCE', 0)\r\n            commit('HANDLE_ACCOUNTS_CHANGED', null)\r\n        },\r\n        async login({commit, dispatch}, connectorType) {\r\n            const connector = new Connector(connectorType)\r\n            if (connector.isLoggedIn()) {\r\n                commit('UPDATE_IS_PORTAL_INSTALLED', true)\r\n                auth = await connector.connect()\r\n                if (connectorType == 'ETH') {\r\n                    auth.web3 = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n                } else {\r\n                    auth.conflux = window.confluxJS;\r\n                    // console.log(auth.conflux.networkVersion)\r\n                    // console.log(auth.conflux.selectedAddress)\r\n\r\n                }\r\n\r\n                await dispatch('loadProvider', connectorType)\r\n            }else{\r\n                commit('UPDATE_IS_PORTAL_INSTALLED', false)\r\n\r\n            }\r\n        },\r\n        async loadProvider({commit, dispatch}, connectorType) {\r\n            try {\r\n                if (auth.removeAllListeners) {\r\n                    auth.removeAllListeners()\r\n                }\r\n\r\n                if (auth.on) {\r\n                    auth.on('chainChanged', async chainId => {\r\n                        commit('UPDATE_CHAIN_ID', parseInt(chainId))\r\n                    })\r\n\r\n                    auth.on('accountsChanged', async accounts => {\r\n                        if (accounts.length !== 0) {\r\n                            commit('HANDLE_ACCOUNTS_CHANGED', accounts[0]);\r\n                            await dispatch('loadProvider',connectorType)\r\n                        }else{\r\n                            commit('HANDLE_ACCOUNTS_CHANGED', null);\r\n                        }\r\n                    })\r\n\r\n                    auth.on('disconnect', async () => {\r\n                        commit('HANDLE_ACCOUNTS_CHANGED', null);\r\n                        commit('HANDLE_CLOSE')\r\n                    })\r\n                }\r\n\r\n                let accounts\r\n                if (connectorType == 'ETH') {\r\n                    accounts = await auth.request({method: \"eth_requestAccounts\"})\r\n                    var account = accounts.length > 0 ? accounts[0] : null\r\n                    commit('HANDLE_ACCOUNTS_CHANGED', account)\r\n\r\n                    var chainId = parseInt(auth.chainId)\r\n                    commit('UPDATE_CHAIN_ID', chainId)\r\n                    var balance = await auth.web3.eth.getBalance(account)\r\n                    commit('UPDATE_BALANCE', balance / 10 ** 18)\r\n                } else if (connectorType == 'CFX') {\r\n                    var account = await auth.selectedAddress;\r\n                    // var account = accounts.length > 0 ? accounts[0] : null\r\n\r\n                    var chainId = parseInt(auth.chainId)\r\n                    commit('UPDATE_CHAIN_ID', chainId)\r\n                    // console.log(\"chainId\");\r\n                    // console.log(chainId);\r\n                    // if (chainId != parseInt(config.networkId)){\r\n                    // }\r\n                    if (account != null) {\r\n                        commit('HANDLE_ACCOUNTS_CHANGED', account)\r\n                        console.log(account);\r\n                        let balance = await auth.conflux.getBalance(account)\r\n                        // console.log(balance);\r\n                        commit('UPDATE_BALANCE', BigNumber(balance).div(BigNumber(10 ** 18)))\r\n                        let pcfxBalance = await web3.state.pcfxContract.balanceOf(account);\r\n                        commit('UPDATE_PCFX_BALANCE', pcfxBalance);\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                //commit('LOAD_PROVIDER_FAILURE', e)\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default web3","\r\nexport default class Connector {\r\n\r\n\t// coinType - BNB ETH CFX\r\n\tconstructor(coinType) {\r\n\t\tthis.coinType = coinType.toUpperCase()\r\n\t}\r\n\r\n\tasync connect() {\r\n\t\tlet provider\r\n\t\tif (this.coinType == 'ETH') {\r\n\t\t\tif (window['ethereum']) {\r\n\t\t\t\twindow['detectProvider'] = window['ethereum']\r\n\t\t\t\tprovider = window['detectProvider']\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait window['detectProvider'].enable()\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(e)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t} else if (window['web3']) {\r\n\t\t\t\tprovider = window['web3'].currentProvider\r\n\t\t\t}\r\n\t\t} \r\n\t\treturn provider\r\n\t}\r\n\r\n\tisLoggedIn() {\r\n\t\tif (this.coinType == 'ETH') {\r\n\t\t\treturn !!window['ethereum']\r\n\t\t} \r\n\t\treturn false\r\n\t}\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport web3 from './web3'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  \tweb3\r\n  }\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport router from './router'\r\nimport store from './store'\r\nimport {Row,Col,\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Main,\r\n  Tabs,TabPane} from 'element-ui'\r\nimport Vuesax from 'vuesax'\r\nimport 'boxicons';\r\nimport VueI18n from 'vue-i18n'\r\n\r\nVue.use(VueI18n)\r\n\r\nimport 'vuesax/dist/vuesax.css' //Vuesax styles\r\n\r\nconst i18n = new VueI18n({\r\n  locale: 'en',  // 语言标识\r\n  messages: {\r\n    'zh': require('./locales/zh'),\r\n    'en': require('./locales/en')\r\n  }\r\n})\r\n\r\nVue.component(Main.name,Main)\r\nVue.component(Row.name,Row)\r\nVue.component(Col.name,Col)\r\nVue.component(Dropdown.name,Dropdown)\r\nVue.component(DropdownMenu.name,DropdownMenu)\r\nVue.component(DropdownItem.name,DropdownItem)\r\nVue.component(Tabs.name,Tabs)\r\nVue.component(TabPane.name,TabPane)\r\nVue.use(Vuesax, {\r\n  // options here\r\n})\r\n\r\nVue.config.productionTip = false\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  i18n,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","// import zhHans from 'vuetify/es5/locale/zh-Hans'\r\nmodule.exports = {\r\n    // ...zhHans,\r\n  \r\n}\r\n","import { BN } from 'web3-utils'\r\n\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\r\nexport const ZERO_BYTES32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\r\nexport const MAX_UINT256 = new BN('2').pow(new BN('256')).sub(new BN('1'));","import {toBN, BN, isBN} from 'web3-utils'\r\nimport {MAX_UINT256} from './Constants'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport config from '@/config'\r\nimport utils from \"@/utils/utils\";\r\nimport Web3 from \"web3\";\r\n\r\nBigNumber.set({ROUNDING_MODE: 1})\r\nconst {abi, bytecode} = require('./abis/erc20.json');\r\n\r\nexport class Erc20 {\r\n    constructor(address) {\r\n\r\n        this.web3 = new Web3(Web3.givenProvider);\r\n        this.web3Reader = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n        this.address = address;\r\n        if (this.web3 != null)\r\n            this.contract = new this.web3.eth.Contract(abi, address);\r\n        this.contractReader = new this.web3Reader.eth.Contract(abi, address);\r\n\r\n        this.decimals = 18;\r\n        this.defaultGasPrice = 20000000000;\r\n    }\r\n\r\n    async totalSupply() {\r\n        let result = await this.contractReader.methods.totalSupply().call();\r\n\r\n        return new BigNumber(result).div(\r\n            BigNumber(10).pow(BigNumber(this.decimals)));\r\n    }\r\n    async balanceOf(user) {\r\n        let balance = await this.contractReader.methods.balanceOf(user).call();\r\n        let precision = await this.getPrecision()\r\n        return new BigNumber(balance).div(precision);\r\n    }\r\n\r\n    async getPrecision() {\r\n        let decimals = this.decimals || await this.contractReader.methods.decimals().cal();\r\n        return BigNumber(10).pow(BigNumber(decimals));\r\n    }\r\n\r\n    async getSymbol() {\r\n        return this.symbol || await this.contractReader.methods.symbol().call();\r\n    }\r\n\r\n    async allowance(owner, spender) {\r\n        let allowedBalance = await this.contractReader.methods.allowance(owner, spender).call();\r\n        let precision = await this.getPrecision()\r\n        return BigNumber(allowedBalance).div(precision);\r\n    }\r\n\r\n    async approve(sender,spender,amount) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmount = BigNumber(amount).times(BigNumber(10).pow(BigNumber(18)));\r\n                let weiAmountBN = toBN(weiAmount);\r\n                var tx = that.contract.methods.approve(spender,weiAmountBN);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async approveMax(sender, spender) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = this.defaultGasPrice\r\n                // let weiAmount = BigNumber(amount).times(BigNumber(10).pow(BigNumber(18)));\r\n                var tx = this.contract.methods.approve(spender, MAX_UINT256);\r\n                let gasLimit = 40000\r\n                try {\r\n                    gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                } catch(err) {\r\n                }\r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            this.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                // console.log(e);\r\n                resolve(utils.contractResult(false,e))\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n}\r\n\r\nexport default Erc20;\r\n","import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\nimport config from '@/config'\r\n\r\nconst APIURL = config.theGraphUrl;\r\n\r\n\r\nconst graphClient = new ApolloClient({\r\n  uri: APIURL,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n\r\nexport default graphClient;","import {toBN, BN, isBN} from 'web3-utils'\r\nimport {MAX_UINT256} from './Constants'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport config from '@/config'\r\nimport utils from \"@/utils/utils\";\r\nimport GraphClient from \"./GraphClient.js\";\r\nimport Web3 from \"web3\";\r\nimport { gql } from '@apollo/client';\r\n\r\nBigNumber.set({ROUNDING_MODE: 1})\r\nconst {abi, bytecode} = require('./abis/Entrance.json');\r\n\r\nexport class Entrance {\r\n    constructor(address) {\r\n        \r\n        this.web3 = new Web3(Web3.givenProvider);\r\n        this.web3Reader = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n        this.address = address;\r\n        if (this.web3 != null)\r\n            this.contract = new this.web3.eth.Contract(abi, address);\r\n        this.contractReader = new this.web3Reader.eth.Contract(abi, address);\r\n\r\n        this.defaultGasPrice = 20000000000;\r\n        this.decimals = 18;\r\n    }\r\n\r\n    async getTeamsByJudger(addr,status,first,skip) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$status:BigInt,$first:Int,$skip:Int) {\r\n                judger(id:$addr) {\r\n                    id\r\n                    judgerOrgs(where:{status:$status},first: $first,skip:$skip){\r\n                        status\r\n                        idleStatus\r\n                        judgerOrg{\r\n                            id\r\n                            url\r\n                            contact\r\n                            rateMantissa\r\n                            name\r\n                            governorAlphaAddr\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                countQuery:judger(id:$addr){\r\n                    fields:judgerOrgs(where:{status:$status}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            \r\n            variables: {\r\n                addr: addr,\r\n                status:status,\r\n                first:first,\r\n                skip:skip\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getJudgerOrgs(first,skip) {\r\n        const tokensQuery = `\r\n            query($first:Int,$skip:Int) {\r\n                judgerOrgs(first: $first,skip:$skip) {\r\n                    id\r\n                    url\r\n                    contact\r\n                    rateMantissa\r\n                    name\r\n                    governorAlphaAddr\r\n                }\r\n                \r\n                countQuery:judgerOrgs {\r\n                    id\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n        query: gql(tokensQuery)\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getProposalsByJudger(addr,signStatus) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$signStatus:[Int!]) {\r\n                judger(id: $addr) {\r\n                    id\r\n                    proposals(where:{signStatus_in:$signStatus}){\r\n                      signStatus\r\n                      proposal{\r\n                        judgerOrgAddr\r\n                        mainContractOrder\r\n                        proposalOrder\r\n                        mainContract{\r\n                            mainContractAddr\r\n                            mainContractOrder\r\n                            judgerOrgAddr\r\n                            status\r\n                            token\r\n                            totalStake\r\n                            contracts{\r\n                                contentOrIpfsHash\r\n                            }\r\n                            persons{\r\n                                person{\r\n                                id\r\n                                }\r\n                            }\r\n                            judgers{\r\n                                judger{\r\n                                    id\r\n                                }\r\n                            }\r\n                            proposals{\r\n                                proposalOrder\r\n                            }\r\n                            judgeProposals{\r\n                                proposalOrder\r\n                            }\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n                \r\n                countQuery:judger(id:$addr) {\r\n                    fields:proposals(where:{signStatus_in:$signStatus}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            variables: {\r\n                addr: addr,\r\n                signStatus:signStatus\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getProposalsByPerson(addr,signStatus) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$signStatus:[Int!]) {\r\n                person(id: $addr) {\r\n                    id\r\n                    proposals(where:{signStatus_in:$signStatus}){\r\n                      proposal{\r\n                        judgerOrgAddr\r\n                        mainContractOrder\r\n                        proposalOrder\r\n                        mainContract{\r\n                            mainContractAddr\r\n                            mainContractOrder\r\n                            judgerOrgAddr\r\n                            status\r\n                            token\r\n                            totalStake\r\n                            contracts{\r\n                                contentOrIpfsHash\r\n                            }\r\n                            persons{\r\n                                person{\r\n                                id\r\n                                }\r\n                            }\r\n                            judgers{\r\n                                judger{\r\n                                    id\r\n                                }\r\n                            }\r\n                            proposals{\r\n                                proposalOrder\r\n                            }\r\n                            judgeProposals{\r\n                                proposalOrder\r\n                            }\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n                \r\n                countQuery:person(id:$addr) {\r\n                    fields:proposals(where:{signStatus_in:$signStatus}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            variables: {\r\n                addr: addr,\r\n                signStatus:signStatus\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n\r\n    async getContractsByPerson(addr,signStatus) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$signStatus:Int) {\r\n                person(id:$addr) {\r\n                    id\r\n                    contracts(where:{signStatus:$signStatus}){\r\n                      contract{\r\n                        startBlockTime\r\n                        contentOrIpfsHash\r\n                        contractOrder\r\n                        mainContract{\r\n                            mainContractAddr\r\n                            mainContractOrder\r\n                            judgerOrgAddr\r\n                            status\r\n                            token\r\n                            totalStake\r\n                            contracts{\r\n                                contentOrIpfsHash\r\n                            }\r\n                            persons{\r\n                                person{\r\n                                id\r\n                                }\r\n                            }\r\n                            judgers{\r\n                                judger{\r\n                                    id\r\n                                }\r\n                            }\r\n                            proposals{\r\n                                proposalOrder\r\n                            }\r\n                            judgeProposals{\r\n                                proposalOrder\r\n                            }\r\n                        }\r\n                      }\r\n                    }\r\n                    \r\n                }\r\n                \r\n                countQuery:person(id:$addr) {\r\n                    fields:contracts(where:{signStatus:$signStatus}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            variables: {\r\n                addr: addr,\r\n                signStatus:signStatus\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getMainContractsByPerson(addr,status,first,skip) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$status:[Int!],$first:Int,$skip:Int) {\r\n                person(id:$addr) {\r\n                    id\r\n                    mainContracts(first:$first,skip:$skip){\r\n                        balance\r\n                      mainContract(where:{status_in:$status}){\r\n                        mainContractAddr\r\n                        mainContractOrder\r\n                        judgerOrgAddr\r\n                        status\r\n                        token\r\n                        totalStake\r\n                        contracts{\r\n                            contentOrIpfsHash\r\n                        }\r\n                        persons{\r\n                            person{\r\n                              id\r\n                            }\r\n                        }\r\n                        judgers{\r\n                            judger{\r\n                                id\r\n                            }\r\n                        }\r\n                        proposals{\r\n                            proposalOrder\r\n                        }\r\n                        judgeProposals{\r\n                            proposalOrder\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n                \r\n                countQuery:person(id:$addr) {\r\n                    fields:mainContracts{\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            variables: {\r\n                addr: addr,\r\n                status: status,\r\n                first: first,\r\n                skip: skip\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getMainContractsByJudger(addr,status,first,skip) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$first:Int,$skip:Int,$status:Int) {\r\n                judger(id:$addr) {\r\n                    id\r\n                    mainContracts(first:$first,skip:$skip,where:{status:$status}){\r\n                      mainContract{\r\n                        mainContractAddr\r\n                        mainContractOrder\r\n                        judgerOrgAddr\r\n                        status\r\n                        token\r\n                        totalStake\r\n                        contracts{\r\n                            contentOrIpfsHash\r\n                        }\r\n                        persons{\r\n                            person{\r\n                              id\r\n                            }\r\n                        }\r\n                        judgers{\r\n                            judger{\r\n                                id\r\n                            }\r\n                        }\r\n                        proposals{\r\n                            proposalOrder\r\n                        }\r\n                        judgeProposals{\r\n                            proposalOrder\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n                \r\n                countQuery:judger(id:$addr) {\r\n                    fields:mainContracts(where:{status:$status}){\r\n                            id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            variables: {\r\n                addr: addr,\r\n                first: first,\r\n                skip: skip,\r\n                status:status\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async launchJudgerProposal(sender,judgerOrgAddr,mainContractOrder,persons, balances) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmounts  = [];\r\n                for (let i=0;i<balances.length;i++){\r\n                    weiAmount = BigNumber(balances[i]).times(BigNumber(10).pow(BigNumber(18)));\r\n                    weiAmounts[i]  = toBN(weiAmount);\r\n                }\r\n                var tx = that.contract.methods.launchJudgerProposal(judgerOrgAddr,mainContractOrder,persons, weiAmounts);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async launchProposal(sender,judgerOrgAddr,mainContractOrder,persons, balances) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmounts  = [];\r\n                for (let i=0;i<balances.length;i++){\r\n                    let weiAmount = BigNumber(balances[i]).times(BigNumber(10).pow(BigNumber(18)));\r\n                    weiAmounts[i]  = toBN(weiAmount);\r\n                }\r\n                var tx = that.contract.methods.launchProposal(judgerOrgAddr,mainContractOrder,persons, weiAmounts);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async addContract(sender,judgerOrgAddr,mainContractOrder,contentOrIpfsHash, stakeBalance) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                \r\n                let weiAmount = BigNumber(stakeBalance).times(BigNumber(10).pow(BigNumber(18)));\r\n                let weiAmountBN  = toBN(weiAmount);\r\n                var tx = that.contract.methods.addContract(judgerOrgAddr,mainContractOrder,contentOrIpfsHash, weiAmountBN);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async createMainContract(sender,persons,kindle,contentOrIpfsHash, amount,erc20Address) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmount = BigNumber(amount).times(BigNumber(10).pow(BigNumber(18)));\r\n                let weiAmountBN  = toBN(weiAmount);\r\n                // debugger;\r\n                var tx = that.contract.methods.createMainContract(persons,kindle,contentOrIpfsHash, weiAmountBN,erc20Address);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async signContract(sender,judgerOrgAddr,mainContractOrder,contractOrder, signStatus,stakeBalance) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmount = BigNumber(stakeBalance).times(BigNumber(10).pow(BigNumber(18)));\r\n                let weiAmountBN  = toBN(weiAmount);\r\n                var tx = that.contract.methods.signContract(judgerOrgAddr,mainContractOrder,contractOrder, signStatus,0);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async signProposal(sender,judgerOrgAddr,mainContractOrder,proposalOrder, signStatus) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                // let weiAmount = BigNumber(stakeBalance).times(BigNumber(10).pow(BigNumber(18)));\r\n                var tx = that.contract.methods.signProposal(judgerOrgAddr,mainContractOrder,proposalOrder, signStatus);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async signJudgerProposal(sender,judgerOrgAddr,mainContractOrder,proposalOrder, signStatus) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                // let weiAmount = BigNumber(stakeBalance).times(BigNumber(10).pow(BigNumber(18)));\r\n                var tx = that.contract.methods.signJudgerProposal(judgerOrgAddr,mainContractOrder,proposalOrder, signStatus);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async applyJudge(sender,judgerOrgAddr,mainContractOrder) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.applyJudge(judgerOrgAddr,mainContractOrder);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async applyExit(sender,judgerOrgAddr,mainContractOrder) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.applyExit(judgerOrgAddr,mainContractOrder);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async exitStakeBalance(sender,judgerOrgAddr,mainContractOrder,amount) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                let weiAmount = BigNumber(amount).times(BigNumber(10).pow(BigNumber(18)));\r\n                let weiAmountBN  = toBN(weiAmount);\r\n\r\n                var tx = that.contract.methods.exitStakeBalance(judgerOrgAddr,mainContractOrder,weiAmountBN);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async createKindle(sender) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // debugger;\r\n                var gasPrice = that.defaultGasPrice\r\n                // let weiAmount = BigNumber(amount).times(BigNumber(10).pow(BigNumber(18)));\r\n\r\n                var tx = that.contract.methods.createKindle();\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default Entrance;\r\n","import {toBN, BN, isBN} from 'web3-utils'\r\nimport {MAX_UINT256} from './Constants'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport config from '@/config'\r\nimport utils from \"@/utils/utils\";\r\nimport GraphClient from \"./GraphClient.js\";\r\nimport Web3 from \"web3\";\r\nimport { gql } from '@apollo/client';\r\n\r\nBigNumber.set({ROUNDING_MODE: 1})\r\nconst {abi, bytecode} = require('./abis/MainContract.json');\r\n\r\nexport class MainContract {\r\n    constructor(address) {\r\n        \r\n        this.web3 = new Web3(Web3.givenProvider);\r\n        this.web3Reader = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n        this.address = address;\r\n        if (this.web3 != null)\r\n            this.contract = new this.web3.eth.Contract(abi, address);\r\n        this.contractReader = new this.web3Reader.eth.Contract(abi, address);\r\n\r\n        this.defaultGasPrice = 20000000000;\r\n        this.decimals = 18;\r\n    }\r\n\r\n    \r\n    async judgerMapNum() {\r\n        let result = await this.contractReader.methods.judgerMapNum().call();\r\n        return result ;\r\n    }\r\n    async getProposalAssignBalance(isJudgerProposal,proposalOrder,user) {\r\n        let result = await this.contractReader.methods.getProposalAssignBalance(isJudgerProposal,proposalOrder,user).call();\r\n        return new BigNumber(result).div(\r\n            BigNumber(10).pow(BigNumber(this.decimals)));\r\n    }\r\n    async getProposalAssignAddr(isJudgerProposal,proposalOrder,order) {\r\n        let result = await this.contractReader.methods.getProposalAssignAddr(isJudgerProposal,proposalOrder,order).call();\r\n        return result ;\r\n    }\r\n    async getProposalSignInfo(isJudgerProposal,proposalOrder,user) {\r\n        let result = await this.contractReader.methods.getProposalSignInfo(isJudgerProposal,proposalOrder,user).call();\r\n        return result ;\r\n    }\r\n    async judgerProposalMap(order) {\r\n        let result = await this.contractReader.methods.judgerProposalMap(order).call();\r\n        return result ;\r\n    }\r\n    async conPersonProposalMap(order) {\r\n        let result = await this.contractReader.methods.conPersonProposalMap(order).call();\r\n        return result ;\r\n    }\r\n    async getContractSignInfo(contractOrder,user) {\r\n        let result = await this.contractReader.methods.getContractSignInfo(contractOrder,user).call();\r\n        return result ;\r\n    }\r\n    \r\n}\r\n\r\nexport default MainContract;\r\n","import {toBN, BN, isBN} from 'web3-utils'\r\nimport {MAX_UINT256} from './Constants'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport config from '@/config'\r\nimport utils from \"@/utils/utils\";\r\nimport GraphClient from \"./GraphClient.js\";\r\nimport Web3 from \"web3\";\r\nimport { gql } from '@apollo/client';\r\n\r\nBigNumber.set({ROUNDING_MODE: 1})\r\nconst {abi, bytecode} = require('./abis/JudgerOrg.json');\r\n\r\nexport class JudgerOrg {\r\n    constructor(address) {\r\n        \r\n        this.web3 = new Web3(Web3.givenProvider);\r\n        this.web3Reader = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n        this.address = address;\r\n        if (this.web3 != null)\r\n            this.contract = new this.web3.eth.Contract(abi, address);\r\n        this.contractReader = new this.web3Reader.eth.Contract(abi, address);\r\n\r\n        this.defaultGasPrice = 20000000000;\r\n        this.decimals = 18;\r\n    }\r\n\r\n    async contactMap(addr) {\r\n        let result = await this.contractReader.methods.contactMap(addr).call();\r\n        return result ;\r\n    }\r\n    async balances(addr) {\r\n        let result = await this.contractReader.methods.balances(addr).call();\r\n        return result ;\r\n    }\r\n    async caseNum(addr) {\r\n        let result = await this.contractReader.methods.caseNum(addr).call();\r\n        return result ;\r\n    }\r\n    async isIdle(addr) {\r\n        let result = await this.contractReader.methods.isIdle(addr).call();\r\n        return result ;\r\n    }\r\n    async delegates(addr) {\r\n        let result = await this.contractReader.methods.delegates(addr).call();\r\n        return result ;\r\n    }\r\n    async idleJudgerSupply() {\r\n        let result = await this.contractReader.methods.idleJudgerSupply().call();\r\n        return result ;\r\n    }\r\n    async totalSupply() {\r\n        let result = await this.contractReader.methods.totalSupply().call();\r\n        return result ;\r\n    }\r\n    \r\n    async url() {\r\n        let result = await this.contractReader.methods.url().call();\r\n        return result ;\r\n    }\r\n    async contact() {\r\n        let result = await this.contractReader.methods.contact().call();\r\n        return result ;\r\n    }\r\n    async remark() {\r\n        let result = await this.contractReader.methods.remark().call();\r\n        return result ;\r\n    }\r\n    async maxCaseNum() {\r\n        let result = await this.contractReader.methods.maxCaseNum().call();\r\n        return result ;\r\n    }\r\n    async assignJudgerNum() {\r\n        let result = await this.contractReader.methods.assignJudgerNum().call();\r\n        return result ;\r\n    }\r\n    async rateMantissa() {\r\n        let result = await this.contractReader.methods.rateMantissa().call();\r\n        return BigNumber(result).div( BigNumber(10).pow(BigNumber(18)));\r\n    }\r\n    async name() {\r\n        let result = await this.contractReader.methods.name().call();\r\n        return result ;\r\n    }\r\n    async setIdleStatus(sender,idleStatus) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.setIdleStatus(idleStatus);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async setContactMap(sender,contact) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.setContactMap(contact);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async delegate(sender,delegatee) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.delegate(delegatee);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default JudgerOrg;\r\n","import {toBN, BN, isBN} from 'web3-utils'\r\nimport {MAX_UINT256} from './Constants'\r\nimport {BigNumber} from 'bignumber.js'\r\nimport config from '@/config'\r\nimport utils from \"@/utils/utils\";\r\nimport GraphClient from \"./GraphClient.js\";\r\nimport Web3 from \"web3\";\r\nimport { gql } from '@apollo/client';\r\n\r\nBigNumber.set({ROUNDING_MODE: 1})\r\nconst {abi, bytecode} = require('./abis/GovernorAlpha.json');\r\n\r\nexport class GovernorAlpha {\r\n    constructor(address) {\r\n        \r\n        this.web3 = new Web3(Web3.givenProvider);\r\n        this.web3Reader = new Web3(new Web3.providers.HttpProvider(config.web3Provider));\r\n        this.address = address;\r\n        if (this.web3 != null)\r\n            this.contract = new this.web3.eth.Contract(abi, address);\r\n        this.contractReader = new this.web3Reader.eth.Contract(abi, address);\r\n\r\n        this.defaultGasPrice = 20000000000;\r\n        this.decimals = 18;\r\n    }\r\n    \r\n\r\n    async getExecutableProposals(addr,first,skip) {\r\n        let blockNum = await this.web3.eth.getBlockNumber();\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$curBlockNum:BigInt,$first:Int,$skip:Int) {\r\n                judgerOrg(id:$addr){\r\n                    governorProposals(where:{votesDiff_gte:1,canceled:false,executed:false,endBlock_lt:$curBlockNum}){\r\n                        id\r\n                        order\r\n                        description\r\n                        judgerOrg\r\n                        proposer\r\n                        targets\r\n                        values\r\n                        signatures\r\n                        calldatas\r\n                        startBlock\r\n                        endBlock\r\n                        canceled\r\n                        executed\r\n                      forVotes\r\n                      againstVotes\r\n                      votesDiff\r\n                    }\r\n                }\r\n                \r\n                countQuery:judgerOrg(id:$addr){\r\n                    fields:governorProposals(where:{votesDiff_gte:1,canceled:false,executed:false,endBlock_lt:$curBlockNum}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            \r\n            variables: {\r\n                addr: addr,\r\n                curBlockNum:blockNum,\r\n                first:first,\r\n                skip:skip\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getActiveProposals(addr,first,skip) {\r\n        let blockNum = await this.web3.eth.getBlockNumber();\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$curBlockNum:BigInt,$first:Int,$skip:Int) {\r\n                judgerOrg(id:$addr) {\r\n                    id\r\n                    governorProposals(where:{endBlock_gt:$curBlockNum}){\r\n                        id\r\n                        order\r\n                        description\r\n                        judgerOrg\r\n                        proposer\r\n                        targets\r\n                        values\r\n                        signatures\r\n                        calldatas\r\n                        startBlock\r\n                        endBlock\r\n                        canceled\r\n                        executed\r\n                        forVotes\r\n                        againstVotes\r\n                        votesDiff\r\n                      }\r\n                }\r\n                \r\n                countQuery:judgerOrg(id:$addr){\r\n                    fields:governorProposals(where:{endBlock_gt:$curBlockNum}){\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            \r\n            variables: {\r\n                addr: addr,\r\n                curBlockNum:blockNum,\r\n                first:first,\r\n                skip:skip\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async getAllProposals(addr,first,skip) {\r\n        const tokensQuery = `\r\n            query($addr:Bytes,$first:Int,$skip:Int) {\r\n                judgerOrg(id:$addr) {\r\n                    id\r\n                    governorProposals{\r\n                        id\r\n                        order\r\n                        description\r\n                        judgerOrg\r\n                        proposer\r\n                        targets\r\n                        values\r\n                        signatures\r\n                        calldatas\r\n                        startBlock\r\n                        endBlock\r\n                        canceled\r\n                        executed\r\n                        forVotes\r\n                        againstVotes\r\n                        votesDiff\r\n                      }\r\n                }\r\n                \r\n                countQuery:judgerOrg(id:$addr){\r\n                    fields:governorProposals{\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n        let result = await GraphClient.query({\r\n            query: gql(tokensQuery),\r\n            \r\n            variables: {\r\n                addr: addr,\r\n                first:first,\r\n                skip:skip\r\n            }\r\n        })\r\n        // .then(data => console.log(\"Subgraph data: \", data))\r\n        // .catch(err => { console.log(\"Error fetching data: \", err) });\r\n        console.log(\"Subgraph data: \", result)\r\n        return result;\r\n    }\r\n    async contactMap(addr) {\r\n        let result = await this.contractReader.methods.contactMap(addr).call();\r\n        return result ;\r\n    }\r\n    async propose(sender,targets,values,signatures,calldatas,description) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.propose(targets,values,signatures,calldatas,description);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async setContactMap(sender,contact) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.setContactMap(contact);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    async castVote(sender,proposalId,support) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.castVote(proposalId,support);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async execute(sender,proposalId) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.execute(proposalId);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async queue(sender,proposalId) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.queue(proposalId);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    async cancel(sender,proposalId) {\r\n        var that = this;\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var gasPrice = that.defaultGasPrice\r\n                var tx = that.contract.methods.cancel(proposalId);\r\n                let gasLimit = 40000\r\n                gasLimit = await tx.estimateGas({ value: 0, from: sender, to: this.address })\r\n                \r\n\r\n                return tx.send({\r\n                    from: sender,\r\n                    gasPrice: gasPrice,\r\n                    gas: Math.round(gasLimit * 1.1)\r\n                },(err, result) => {\r\n                    if(err) {\r\n                        resolve(utils.contractResult(false,err))\r\n                    }else {\r\n                        // this.transactions.push(result)\r\n                        let timer = setInterval(()=>{\r\n                            that.web3Reader.eth.getTransactionReceipt(result, (err, receipt)=>{\r\n                            if(receipt) {\r\n                                clearInterval(timer);\r\n                                resolve(utils.contractResult(true,receipt))\r\n                            }\r\n                          })\r\n                        }, 2000)\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                try{\r\n                    console.log(e);\r\n                    var str = e.toString();\r\n                    var start = str.indexOf('{');\r\n                    var over = str.indexOf('}');\r\n                    var jsonstr = str.substr(start,over);\r\n                    var jsonObject = JSON.parse(jsonstr)\r\n                    resolve(utils.contractResult(false,jsonObject));\r\n                }catch(e2){\r\n                    resolve(utils.contractResult(false,e));\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default GovernorAlpha;\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\tchainId: 1,\r\n\r\n\tweb3Provider: \"https://matic-mumbai.chainstacklabs.com\",\r\n\ttheGraphUrl:\"https://api.studio.thegraph.com/query/7200/cybercourt/0.16\",\r\n\tnetworkId: 80001,\r\n\ttokens:[\r\n\t\t{address:\"0xc819ca082f8009527c348069Fa0Bf0fCe5d260a8\",name:\"TEST\"}\r\n\t],\r\n\tentranceAddress:\"0xD662175FDc362D7090f5D9b87781aB63625eA203\",\r\n\texplorerUrl:\"https://polygon-explorer-mumbai.chainstacklabs.com/\",\r\n\t\r\n}\r\n","'use strict'\r\nmodule.exports = {\r\n\tchainId: 1,\r\n\r\n\t//localhost\r\n\r\n\tweb3Provider: \"https://matic-mumbai.chainstacklabs.com\",\r\n\ttheGraphUrl:\"https://api.studio.thegraph.com/query/7200/cybercourt/0.14\",\r\n\tnetworkId: 80001,\r\n\ttokens:[\r\n\t\t{address:\"0xBBEA277418536446717EE0027d01D461C56B9736\",name:\"TEST\"}\r\n\t],\r\n\tentranceAddress:\"0xdC02d391f2E144c55dC7f4ea4FaE26Ea581C0e41\",\r\n\texplorerUrl:\"https://polygon-explorer-mumbai.chainstacklabs.com/\",\r\n\t\r\n}\r\n","let env = 'development'\r\nif(process.env.NODE_ENV == 'production') {\r\n\tenv = 'production';\r\n}\r\n\r\nconst config = require(`./${env}`);\r\n\r\nexport default config;\r\n","\r\n\r\nfunction formatDate(str) {\r\n    return str; //`${str.substr(0, 4)}/${str.substr(4, 2)}/${str.substr(6, 2)}`\r\n}\r\n\r\nfunction shortAddr(addr) {\r\n    return addr.substr(0, 6) + '...' + addr.substr(-4)\r\n}\r\n\r\nfunction contractResult(succ, msg) {\r\n    return {succ: succ, ...msg};\r\n}\r\nfunction formatSeconds(value) {\r\n    var theTime = parseInt(value);\r\n    var theTime1 = 0;\r\n    var theTime2 = 0;\r\n    if (theTime > 60) {\r\n        theTime1 = parseInt(theTime / 60);\r\n        theTime = parseInt(theTime % 60);\r\n        if (theTime1 > 60) {\r\n            theTime2 = parseInt(theTime1 / 60);\r\n            theTime1 = parseInt(theTime1 % 60);\r\n        }\r\n    }\r\n\r\n    var result = \"\" + parseInt(theTime);\r\n        result = \"\" + parseInt(theTime)+\"s\";\r\n\r\n        result = \"\" + parseInt(theTime1) + \"m\" + result;\r\n    if (theTime2 > 0) {\r\n        result = \"\" + parseInt(theTime2) + \"h\" + result;\r\n    }\r\n    return result;\r\n}\r\nexport default {\r\n    formatDate,\r\n    shortAddr,\r\n    contractResult,\r\n    formatSeconds,\r\n}"],"sourceRoot":""}